// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleBookKeeping.Database;

namespace SimpleBookKeeping.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190811164610_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Models.CostDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CostId");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("Deleted");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CostId");

                    b.HasIndex("Date");

                    b.HasIndex("Deleted");

                    b.ToTable("CostsDetails");
                });

            modelBuilder.Entity("SimpleBookKeeping.Database.Models.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name");

                    b.Property<int?>("PlanId");

                    b.HasKey("Id");

                    b.HasIndex("Deleted");

                    b.HasIndex("PlanId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("SimpleBookKeeping.Database.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Balance");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("End");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Start");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("Deleted");

                    b.HasIndex("End");

                    b.HasIndex("Start");

                    b.HasIndex("UserId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("SimpleBookKeeping.Database.Models.PlanMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PlanId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("PlanMembers");
                });

            modelBuilder.Entity("SimpleBookKeeping.Database.Models.Spend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<int?>("CostDetailId");

                    b.Property<int>("OrderNumber");

                    b.Property<int?>("UserId");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CostDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("Spends");
                });

            modelBuilder.Entity("SimpleBookKeeping.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.HasIndex("Login");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Database.Models.CostDetail", b =>
                {
                    b.HasOne("SimpleBookKeeping.Database.Models.Cost", "Cost")
                        .WithMany("CostDetails")
                        .HasForeignKey("CostId");
                });

            modelBuilder.Entity("SimpleBookKeeping.Database.Models.Cost", b =>
                {
                    b.HasOne("SimpleBookKeeping.Database.Models.Plan", "Plan")
                        .WithMany("Costs")
                        .HasForeignKey("PlanId");
                });

            modelBuilder.Entity("SimpleBookKeeping.Database.Models.Plan", b =>
                {
                    b.HasOne("SimpleBookKeeping.Database.Models.User", "User")
                        .WithMany("Plans")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SimpleBookKeeping.Database.Models.PlanMember", b =>
                {
                    b.HasOne("SimpleBookKeeping.Database.Models.Plan", "Plan")
                        .WithMany("PlanMembers")
                        .HasForeignKey("PlanId");

                    b.HasOne("SimpleBookKeeping.Database.Models.User", "User")
                        .WithMany("PlanMembers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SimpleBookKeeping.Database.Models.Spend", b =>
                {
                    b.HasOne("Database.Models.CostDetail", "CostDetail")
                        .WithMany("Spends")
                        .HasForeignKey("CostDetailId");

                    b.HasOne("SimpleBookKeeping.Database.Models.User", "User")
                        .WithMany("Spend")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
